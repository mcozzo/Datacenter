---
# Mount NFS nodes for docker
# Stand up o2cb and setup clustering
# Connect to iSCSI shared datastore

- name: Include docker vars
  include_vars:
    file: ./group_vars/docker.yml

- name: Include vault vars
  include_vars:
    file: ./group_vars/vault.yml


- name: Install applications
  apt:
    name:
      - s3cmd
      #- open-iscsi
      ##- iscsiadm
      #- multipath-tools
      #- ocfs2-tools
    state: present
    update_cache: yes
    cache_valid_time: 3600
  become: yes
  tags:
    - docker

################################################################################
# S3CMD Config
################################################################################

- name: Template a file to /etc/passwd-s3cmd
  ansible.builtin.template:
    src: s3cfg.j2
    dest: /etc/passwd-s3cmd
    owner: root
    group: root
    mode: '0600'

#- name: Verify s3fs config file
#  ansible.builtin.lineinfile:
#    path: /etc/s3cmd
#    state: present
#    create: yes
#    line: "{{ vault_wasabi_svc_media_access_key_ro }}:{{ vault_wasabi_svc_media_secret_key_ro }}"
#    regexp: "^[a-zA-Z0-9]{20}:[a-zA-Z0-9]{40}"
#    mode: 0600
#  become: yes
#  notify:
#    - Reboot host



#- name: Verify s3fs password file
#  ansible.builtin.lineinfile:
#    path: /etc/passwd-s3fs
#    state: present
#    create: yes
#    line: "{{ vault_wasabi_svc_media_access_key }}:{{ vault_wasabi_svc_media_secret_key }}"
#    regexp: "^[a-zA-Z0-9]{20}:[a-zA-Z0-9]{40}"
#    mode: 0600
#  become: yes
#  notify:
#    - Reboot host
#
#- name: Verify s3fs password file RO
#  ansible.builtin.lineinfile:
#    path: /etc/passwd-s3fs-ro
#    state: present
#    create: yes
#    line: "{{ vault_wasabi_svc_media_access_key_ro }}:{{ vault_wasabi_svc_media_secret_key_ro }}"
#    regexp: "^[a-zA-Z0-9]{20}:[a-zA-Z0-9]{40}"
#    mode: 0600
#  become: yes
#  notify:
#    - Reboot host
#
#
## https://manpages.ubuntu.com/manpages/xenial/man1/s3fs.1.html
#- name: Create common Mounts
#  mount:
#    path: "{{ item.path }}"
#    src:  "{{ item.src }}"
#    fstype: "{{ item.type }}"
#    opts: "{{ item.opts }}"
#    state: mounted
#  become: yes
#  notify:
#    - Reboot host
#  with_items:
#    #- { src: "s3fs#cozzomovies",   path: "/mnt/s3/movies",     type: "fuse", opts: "_netdev,noua,allow_other,nonempty,del_cache,passwd_file=/etc/passwd-s3fs,url=https://s3.us-west-1.wasabisys.com,uid=1001,gid=1001,use_cache=/mnt/docker-local/s3fs-cache/movies" }
#    #- { src: "s3fs#cozzo4kmovies", path: "/mnt/s3/4kmovies",   type: "fuse", opts: "_netdev,noua,allow_other,nonempty,del_cache,passwd_file=/etc/passwd-s3fs,url=https://s3.us-west-1.wasabisys.com,uid=1001,gid=1001,use_cache=/mnt/docker-local/s3fs-cache/4kmovies" }
#    #- { src: "s3fs#cozzotv",       path: "/mnt/s3/tv",         type: "fuse", opts: "_netdev,noua,allow_other,nonempty,del_cache,passwd_file=/etc/passwd-s3fs,url=https://s3.us-west-1.wasabisys.com,uid=1001,gid=1001,use_cache=/mnt/docker-local/s3fs-cache/tv" }
#    #- { src: "s3fs#cozzologging",  path: "/mnt/s3/logging",    type: "fuse", opts: "_netdev,noua,allow_other,nonempty,del_cache,passwd_file=/etc/passwd-s3fs,url=https://s3.us-west-1.wasabisys.com,uid=1001,gid=1001,use_cache=/mnt/docker-local/s3fs-cache/logging" }
#    #
#    #- { src: "s3fs#cozzomovies",   path: "/mnt/s3ro/movies",   type: "fuse", opts: "_netdev,noua,allow_other,nonempty,del_cache,passwd_file=/etc/passwd-s3fs-ro,url=https://s3.us-west-1.wasabisys.com,uid=1001,gid=1001,use_cache=/mnt/docker-local/s3fs-cache/movies" }
#    #- { src: "s3fs#cozzo4kmovies", path: "/mnt/s3ro/4kmovies", type: "fuse", opts: "_netdev,noua,allow_other,nonempty,del_cache,passwd_file=/etc/passwd-s3fs-ro,url=https://s3.us-west-1.wasabisys.com,uid=1001,gid=1001,use_cache=/mnt/docker-local/s3fs-cache/4kmovies" }
#    #- { src: "s3fs#cozzotv",       path: "/mnt/s3ro/tv",       type: "fuse", opts: "_netdev,noua,allow_other,nonempty,del_cache,passwd_file=/etc/passwd-s3fs-ro,url=https://s3.us-west-1.wasabisys.com,uid=1001,gid=1001,use_cache=/mnt/docker-local/s3fs-cache/tv" }
#    #- { src: "s3fs#cozzologging",  path: "/mnt/s3ro/logging",  type: "fuse", opts: "_netdev,noua,allow_other,nonempty,del_cache,passwd_file=/etc/passwd-s3fs-ro,url=https://s3.us-west-1.wasabisys.com,uid=1001,gid=1001,use_cache=/mnt/docker-local/s3fs-cache/logging" }
#
#    - { src: "s3fs#cozzomovies",   path: "/mnt/s3/movies",      type: "fuse", opts: "_netdev,allow_other,nonempty,passwd_file=/etc/passwd-s3fs,url=https://s3.us-west-1.wasabisys.com,uid=1001,gid=1001" }
#    - { src: "s3fs#cozzo4kmovies", path: "/mnt/s3/4kmovies",    type: "fuse", opts: "_netdev,allow_other,nonempty,passwd_file=/etc/passwd-s3fs,url=https://s3.us-west-1.wasabisys.com,uid=1001,gid=1001" }
#    - { src: "s3fs#cozzotv",       path: "/mnt/s3/tv",          type: "fuse", opts: "_netdev,allow_other,nonempty,passwd_file=/etc/passwd-s3fs,url=https://s3.us-west-1.wasabisys.com,uid=1001,gid=1001" }
#    - { src: "s3fs#cozzologging",  path: "/mnt/s3/logging",     type: "fuse", opts: "_netdev,allow_other,nonempty,passwd_file=/etc/passwd-s3fs,url=https://s3.us-west-1.wasabisys.com,uid=1001,gid=1001" }
#    
#    - { src: "s3fs#cozzomovies",   path: "/mnt/s3-ro/movies",   type: "fuse", opts: "_netdev,allow_other,nonempty,passwd_file=/etc/passwd-s3fs-ro,url=https://s3.us-west-1.wasabisys.com,uid=1001,gid=1001" }
#    - { src: "s3fs#cozzo4kmovies", path: "/mnt/s3-ro/4kmovies", type: "fuse", opts: "_netdev,allow_other,nonempty,passwd_file=/etc/passwd-s3fs-ro,url=https://s3.us-west-1.wasabisys.com,uid=1001,gid=1001" }
#    - { src: "s3fs#cozzotv",       path: "/mnt/s3-ro/tv",       type: "fuse", opts: "_netdev,allow_other,nonempty,passwd_file=/etc/passwd-s3fs-ro,url=https://s3.us-west-1.wasabisys.com,uid=1001,gid=1001" }
#    - { src: "s3fs#cozzologging",  path: "/mnt/s3-ro/logging",  type: "fuse", opts: "_netdev,allow_other,nonempty,passwd_file=/etc/passwd-s3fs-ro,url=https://s3.us-west-1.wasabisys.com,uid=1001,gid=1001" }
#
#
#    # parallel_count=10
#    # use_cache=/mnt/docker-local/s3fs-cache
#    # use_cache=/mnt/docker-local/s3fs-cache,del_cache,
#    # sudo mkdir -p /mnt/docker-local/s3fs-cache/movies
#    # sudo mkdir -p /mnt/docker-local/s3fs-cache/4kmovies
#    # sudo mkdir -p /mnt/docker-local/s3fs-cache/tv
