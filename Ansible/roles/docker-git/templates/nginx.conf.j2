## user       www www;  ## Default: nobody
worker_processes  5;  ## Default: 1
error_log  logs/error.log;
pid        logs/nginx.pid;
worker_rlimit_nofile 8192;

events {
  worker_connections  4096;  ## Default: 1024
}

http {
  include    /etc/nginx/mime.types;
  include    /etc/nginx/proxy.conf;
  include    /etc/nginx/fastcgi.conf;
  include    /etc/nginx/conf.d/*.conf; # HTTPS configs
  index    index.html index.htm index.php;

  default_type application/octet-stream;
  log_format   main '$remote_addr - $remote_user [$time_local]  $status '
    '"$request" $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';
  access_log   logs/access.log;
  sendfile     on;
  tcp_nopush   on;
  server_names_hash_bucket_size 128; # this seems to be required for some vhosts

  server { # php/fastcgi
    listen       80 default_server;
    listen       [::]:80 default_server;
    #server_name  cozzo.net *.cozzo.net;
    server_name  _;
    access_log   logs/cozzo.net-access.log  main;
    root         html;

    location / {
      root    /var/www/cozzo.net/htdocs;
    }

#    location ~ \.php$ {
#      fastcgi_pass   127.0.0.1:1025;
#      root    /var/www/cozzo.net/htdocs;
#    }
  }


# ssl_certificate /etc/letsencrypt/live/notes.mattyette.com/fullchain.pem; # managed by Certbot

#  server { # simple reverse-proxy
#    listen       80;
#    server_name  domain2.com www.domain2.com;
#    access_log   logs/domain2.access.log  main;
#
#    # serve static files
#    location ~ ^/(images|javascript|js|css|flash|media|static)/  {
#      root    /var/www/cozzo.net/htdocs;
#      expires 30d;
#    }
#
#    # pass requests for dynamic content to rails/turbogears/zope, et al
#    location / {
#      proxy_pass      http://127.0.0.1:8080;
#    }
#  }

#  upstream big_server_com {
#    server 127.0.0.3:8000 weight=5;
#    server 127.0.0.3:8001 weight=5;
#    server 192.168.0.1:8000;
#    server 192.168.0.1:8001;
#  }

#  server { # simple load balancing
#    listen          80;
#    server_name     big.server.com;
#    access_log      logs/big.server.access.log main;
#
#    location / {
#      proxy_pass      http://big_server_com;
#    }
#  }
}



#server {
#  listen    443 ssl http2;
#  listen    [::]:443 ssl;
#  server_name tautulli.mattyette.com;
#  ssl_session_cache builtin:1000 shared:SSL:10m;
#  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
#  ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
#  ssl_prefer_server_ciphers on;
#  access_log      /var/log/nginx/tautulli.mattyette.com-access.log;
#  location / {
#   proxy_set_header    Host $host;
#   proxy_set_header    X-Real-IP $remote_addr;
#   proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
#   proxy_set_header    X-Forwarded-Proto $scheme;
#   proxy_pass     http://192.168.111.202:8181;
#   proxy_read_timeout 90;
#   proxy_redirect   http://192.168.111.202:8181 https://tautulli.mattyette.com;
#  }
#  ssl_certificate /etc/letsencrypt/live/tautulli.mattyette.com/fullchain.pem; # managed by Certbot
#  ssl_certificate_key /etc/letsencrypt/live/tautulli.mattyette.com/privkey.pem; # managed by Certbot
#}


## cat nginx.conf
## For more information on configuration, see:
##  * Official English Documentation: http://nginx.org/en/docs/
##  * Official Russian Documentation: http://nginx.org/ru/docs/
#user nginx;
#worker_processes auto;
#error_log /var/log/nginx/error.log;
#pid /run/nginx.pid;
## Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
#include /usr/share/nginx/modules/*.conf;
#events {
#  worker_connections 1024;
#}
#http {
#  log_format main ‘$remote_addr - $remote_user [$time_local] “$request” ’
#           ‘$status $body_bytes_sent “$http_referer” ’
#           ‘“$http_user_agent” “$http_x_forwarded_for”’;
#  access_log /var/log/nginx/access.log main;
#  sendfile      on;
#  tcp_nopush     on;
#  tcp_nodelay     on;
#  keepalive_timeout  65;
#  types_hash_max_size 2048;
#  include       /etc/nginx/mime.types;
#  default_type    application/octet-stream;
#  # Load modular configuration files from the /etc/nginx/conf.d directory.
#  # See http://nginx.org/en/docs/ngx_core_module.html#include
#  # for more information.
#  include /etc/nginx/conf.d/*.conf;
#  server {
#    listen    80 default_server;
#    listen    [::]:80 default_server;
#    server_name _;
#    root     /usr/share/nginx/html;
#	server_tokens off;
#    # Load configuration files for the default server block.
#    include /etc/nginx/default.d/*.conf;
#    location / {
#    }
#    error_page 404 /404.html;
#      location = /40x.html {
#    }
#    error_page 500 502 503 504 /50x.html;
#      location = /50x.html {
#    }
#  listen [::]:443 ssl ipv6only=on; # managed by Certbot
#  listen 443 ssl; # managed by Certbot
#  ssl_certificate /etc/letsencrypt/live/notes.mattyette.com/fullchain.pem; # managed by Certbot
#  ssl_certificate_key /etc/letsencrypt/live/notes.mattyette.com/privkey.pem; # managed by Certbot
#  include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
#  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
#}
## Settings for a TLS enabled server.
##
##  server {
##    listen    443 ssl http2 default_server;
##    listen    [::]:443 ssl http2 default_server;
##    server_name _;
##    root     /usr/share/nginx/html;
##
##    ssl_certificate “/etc/pki/nginx/server.crt”;
##    ssl_certificate_key “/etc/pki/nginx/private/server.key”;
##    ssl_session_cache shared:SSL:1m;
##    ssl_session_timeout 10m;
##    ssl_ciphers HIGH:!aNULL:!MD5;
##    ssl_prefer_server_ciphers on;
##
##    # Load configuration files for the default server block.
##    include /etc/nginx/default.d/*.conf;
##
##    location / {
##    }
##
##    error_page 404 /404.html;
##      location = /40x.html {
##    }
##
##    error_page 500 502 503 504 /50x.html;
##      location = /50x.html {
##    }
##  }
#}
