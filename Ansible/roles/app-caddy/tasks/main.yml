---

# This mapping bit strips the name off the front and forces the 
- name: docker mapping public
  #vars: 
  #  hostname: "{{ inventory_hostname | split('.', 1) }}"
  debug:
    #msg: 'Public URL: {{ item.1 }} CNAME: {{ item.0.proxy_server }}'
    #msg: "APP: {{ item.docker_host }} Hostname: {{ inventory_hostname }}"
    #msg: "{{ inventory_hostname | split('.', 1) }}"
    msg: "{{ item.name }} Runs on {{ inventory_hostname }} proxy server: {{item.proxy_server}}"
  #loop: "{{ apps | subelements('proxy_urls') }}"
  loop: "{{ apps }}"
  loop_control:
    index_var: my_idx
  tags:
    - always
  #when: hostname.1 == item.proxy_server
  when: 
    - inventory_hostname == item.proxy_server
    - item.public == true

- name: docker mapping private
  #vars: 
  #  hostname: "{{ inventory_hostname | split('.', 1) }}"
  debug:
    #msg: 'Public URL: {{ item.1 }} CNAME: {{ item.0.proxy_server }}'
    #msg: "APP: {{ item.docker_host }} Hostname: {{ inventory_hostname }}"
    #msg: "{{ inventory_hostname | split('.', 1) }}"
    msg: "{{ item.name }} Runs on in-{{ inventory_hostname }} proxy server: {{item.proxy_server}}"
  #loop: "{{ apps | subelements('proxy_urls') }}"
  loop: "{{ apps }}"
  loop_control:
    index_var: my_idx
  tags:
    - always
  #when: hostname.1 == item.proxy_server
  when: 
    - inventory_hostname == item.proxy_server
    - item.public == false

# Ensure directories existing
- name: Verify app directory
  file:
    path: "{{ container_root }}/{{ item.app }}"
    state: directory
    owner: "1001"
    group: "1001"
    recurse: true
    #owner: "{{ ansible_user }}"
    #group: "{{ ansible_user }}"
  become: true
  notify:
    - Restart Caddy
  loop: "{{ proxy_servers }}"
  when:
    - item.name == inventory_hostname

# Ensure directories existing
- name: Verify app config directory
  file:
    path: "{{ container_root }}/{{ item.app }}/caddy"
    state: directory
    owner: "1001"
    group: "1001"
    recurse: true
    #owner: "{{ ansible_user }}"
    #group: "{{ ansible_user }}"
  become: true
  notify:
    - Restart Caddy
  loop: "{{ proxy_servers }}"
  when:
    - item.name == inventory_hostname

# Ensure directories existing
- name: Verify app config directory
  file:
    path: "{{ container_root }}/{{ item.app }}/caddyfiles"
    state: directory
    owner: "1001"
    group: "1001"
    recurse: true
    #owner: "{{ ansible_user }}"
    #group: "{{ ansible_user }}"
  become: true
  notify:
    - Restart Caddy
  loop: "{{ proxy_servers }}"
  when:
    - item.name == inventory_hostname

# Ensure directories existing
- name: Verify app data directory
  file:
    path: "{{ container_root }}/{{ item.app }}/data"
    state: directory
    owner: "1001"
    group: "1001"
    recurse: true
    #owner: "{{ ansible_user }}"
    #group: "{{ ansible_user }}"
  become: true
  notify:
    - Restart Caddy
  loop: "{{ proxy_servers }}"
  when:
    - item.name == inventory_hostname

# Ensure directories existing
- name: Verify app site directory
  file:
    path: "{{ container_root }}/{{ item.app }}/site"
    state: directory
    owner: "1001"
    group: "1001"
    recurse: true
    #owner: "{{ ansible_user }}"
    #group: "{{ ansible_user }}"
  become: true
  notify:
    - Restart Caddy
  loop: "{{ proxy_servers }}"
  when:
    - item.name == inventory_hostname

# Ensure directories existing
- name: Verify site directory
  file:
    path: "{{ container_root }}/{{ item.app }}/site/default"
    state: directory
    owner: "1001"
    group: "1001"
    recurse: true
    #owner: "{{ ansible_user }}"
    #group: "{{ ansible_user }}"
  become: true
  notify:
    - Restart Caddy
  loop: "{{ proxy_servers }}"
  when:
    - item.name == inventory_hostname

- name: Place default site files
  template:
    src: "index.html.j2"
    dest: "{{ container_root }}/{{ item.app }}/site/default"
    owner: "1001"
    group: "1001"
  become: true
  notify:
    - Restart Caddy
  loop: "{{ proxy_servers }}"
  when:
    - item.name == inventory_hostname

- name: Place main Caddyfile
  template:
    src: "Caddyfile.j2"
    dest: "{{ container_root }}/{{ item.app }}/caddy/Caddyfile"
    owner: "1001"
    group: "1001"
  become: true
  notify:
    - Restart Caddy
  loop: "{{ proxy_servers }}"
  when:
    - item.name == inventory_hostname

- name: Place public site specific Caddyfiles
  become: true
  template:
    src: "public-site.fqdn.caddy.j2"
    dest: "{{ container_root }}/caddy.{{ inventory_hostname }}/caddyfiles/{{ item.docker_app }}.caddy"
    owner: "1001"
    group: "1001"
    force: true
  notify:
    - Restart Caddy
  loop: "{{ apps }}"
  loop_control:
    index_var: my_idx
  tags:
    - always
  when: 
    - item.public        == true
    - item.proxy         == true
    - inventory_hostname == item.proxy_server

- name: Place private site specific Caddyfiles
  become: true
  template:
    src: "private-site.fqdn.caddy.j2"
    dest: "{{ container_root }}/caddy.{{ inventory_hostname }}/caddyfiles/{{ item.docker_app }}.caddy"
    owner: "1001"
    group: "1001"
    force: true
  notify:
    - Restart Caddy
  loop: "{{ apps }}"
  loop_control:
    index_var: my_idx
  tags:
    - always
  when: 
    - item.public        == false
    - item.proxy         == true
    - inventory_hostname == item.proxy_server


#
#- name: Place private site specific Caddyfiles
#  vars: 
#    hostname: "{{ inventory_hostname | split('.', 1) }}"
#  become: true
#  template:
#    src: "private-site.fqdn.caddy.j2"
#    dest: "{{ container_root }}/caddy-{{ inventory_hostname }}/caddyfiles/{{ item.docker_app }}.caddy"
#    owner: "1001"
#    group: "1001"
#    force: true
#  notify:
#    - Restart Caddy
#  loop: "{{ apps }}"
#  when:
#    - item.public       == false
#    - item.proxy        == true
#    - item.proxy_server == hostname.1
#
##- name: docker mapping
##  debug:
##    #msg: 'Public URL: {{ item.1 }} CNAME: {{ item.0.proxy_server }}'
##    msg: "APP: {{ item.docker_host }} Hostname: {{ inventory_hostname }}"
##  #loop: "{{ apps | subelements('proxy_urls') }}"
##  loop: "{{ apps }}"
##  loop_control:
##    index_var: my_idx
##  tags:
##    - always
#
#