---
# This playbook contains common plays that will be run on all nodes.

- name: Include user list
  include_vars:
    file: ./group_vars/users.yml


- name: "Make sure we have a 'wheel' group"
  group:
    name: wheel
    state: present
    gid: 1001
  tags:
    - user
  become: yes

- name: "Allow 'wheel' group to have passwordless sudo"
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: '^%wheel'
    line: '%wheel ALL=(ALL) NOPASSWD: ALL'
    validate: visudo -cf %s

#- name: debug
#  debug:
#    #msg: "{{ item.1.resource_value }}"
#    msg: "{{ item.name }}"
#    #comment:  "{{ item.comment }}"
#    #state:    "{{ item.state }}"
#    #uid:      "{{ item.uid }}"
#    #groups:   "{{ item.groups }}"
#    #password: "{{ item.password }}"
#  tags:
#    - always
#  loop: "{{ user_list }}"

- name: "Add/remove users"
  user:
    name:     "{{ item.name }}"
    comment:  "{{ item.comment }}"
    state:    "{{ item.state }}"
    uid:      "{{ item.uid }}"
    groups:   "{{ item.groups }}"
    password: "{{ item.password }}"
  notify:
    #- Reboot host
  loop: "{{ user_list }}"

- name: Clean home dir if needed
  file:
    #path: "~/.ssh"
    path: "/home/{{ item.name }}"
    state: absent
  when: item.state == "absent"
  loop: "{{ user_list }}"

- name: Create '~/.ssh' if it does not exist
  file:
    #path: "~/.ssh"
    path: "/home/{{ item.name }}/.ssh"
    state: directory
    mode: '0700'
    owner: "{{ item.name }}"
    group: "{{ item.name }}"
  when: item.state == "present"
  #become: yes
  #become_user: "{{ ansible_user }}"
  loop: "{{ user_list }}"

- name: Create '~/.ssh/authorized_keys' if it does not exist
  template:
    src: ssh_authorized_keys.j2
    dest: "/home/{{ item.name }}/.ssh/authorized_keys"
#    dest: "/home/{{ ansible_user }}/.ssh/authorized_keys"
    mode: '0600'
    owner: "{{ item.name }}"
    group: "{{ item.name }}"
  when: item.state == "present"
  loop: "{{ user_list }}"

# Shouldn't need to check for keys.
#- name: "Check for ~/.ssh/id_ed25519 keys"
#  stat:
#    path: "/home/{{ item.name }}/.ssh/id_ed25519"
#  register: ssh_keys
#  when: item.state == "present"
#  loop: "{{ user_list }}"

#- name: Debug!
#  ansible.builtin.debug:
#    msg: "{{ my_index }}"
#  loop: "{{ user_list }}"
#  loop_control:
#    index_var: my_index
#
#- name: Debug!
#  ansible.builtin.debug:
#    msg: "{{ ssh_keys }}"

- name: "Generate keypair for user "
  openssh_keypair:
    path: "/home/{{ item.name }}/.ssh/id_ed25519"
    type: ed25519
    mode: 0600
    owner: "{{ item.name }}"
    regenerate: partial_idempotence
  when: (item.state == "present")
  loop: "{{ user_list }}"
  loop_control:
    index_var: my_index

- name: Backup key for Re Generate
  ansible.builtin.copy:
    src: "/home/{{ item.name }}/.ssh/id_ed25519"
    dest: "/home/{{ item.name }}/.ssh/id_ed25519.bak"
    remote_src: yes
  when: (item.state == "present") and (regenerate_keys == true)
  loop: "{{ user_list }}"

- name: Backup pub key for Re Generate
  ansible.builtin.copy:
    src: "/home/{{ item.name }}/.ssh/id_ed25519.pub"
    dest: "/home/{{ item.name }}/.ssh/id_ed25519.pub.bak"
    remote_src: yes
  when: (item.state == "present") and (regenerate_keys == true)
  loop: "{{ user_list }}"

- name: "Re Generate keypair for user "
  openssh_keypair:
    path: "/home/{{ item.name }}/.ssh/id_ed25519"
    type: ed25519
    mode: 0600
    owner: "{{ item.name }}"
    regenerate: always
  when: (item.state == "present") and (regenerate_keys == true)
  loop: "{{ user_list }}"
  loop_control:
    index_var: my_index

- name: Clean ~/.ssh/id_rsa
  file:
    #path: "~/.ssh"
    path: "/home/{{ item.name }}/.ssh/id_rsa"
    state: absent
  when: item.state == "present"
  loop: "{{ user_list }}"

- name: Clean ~/.ssh/id_rsa.pub
  file:
    #path: "~/.ssh"
    path: "/home/{{ item.name }}/.ssh/id_rsa.pub"
    state: absent
  when: item.state == "present"
  loop: "{{ user_list }}"



## do twice
#- name: SSH key settings, chmod & chown ~/.ssh/id_rsa
#  file:
#    path: "{{ item.path }}"
#    owner: "mattcozzolino"
#    group: "mattcozzolino"
#    mode: "{{ item.mode }}"
#  with_items:
#    - { path: '/home/mattcozzolino/.ssh/id_rsa',     mode: '0600' }
#    - { path: '/home/mattcozzolino/.ssh/id_rsa.pub', mode: '0644' }
#  loop: "{{ user_list }}"
