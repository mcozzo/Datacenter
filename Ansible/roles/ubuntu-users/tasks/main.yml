---
# This playbook contains common plays that will be run on all nodes.

- name: "Make sure we have a 'wheel' group"
  group:
    name: wheel
    state: present
  tags:
    - user
  become: yes

- name: "Allow 'wheel' group to have passwordless sudo"
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: '^%wheel'
    line: '%wheel ALL=(ALL) NOPASSWD: ALL'
    validate: visudo -cf %s

#- name: Add sudoers users to wheel group
#  user:
#    name: "{{ item }}"
#    groups: wheel
#    append: yes
#  with_items: "{{ sudoers }}"

- name: "Add the user {{ ansible_user }}"
  user:
    name: "{{ ansible_user }}"
    comment: "Ansible service account"
    state: present
    uid: 1010
    groups: wheel,sudo
    password: "$6$Ee0f.1oA9LNZ.Uwm$/blcNQudJkul1ZMKn9Ip5D/V6Ogto4YMAPfpaWnddldAkpHO2a9lGzt1.o.wsmQA5hK63KF/YZ9BZ2Q1lO.uR/"
  notify:
    - Reboot host
# Generate passwords like this
# https://docs.ansible.com/ansible/latest/reference_appendices/faq.html#how-do-i-generate-encrypted-passwords-for-the-user-module
# python -c "from passlib.hash import sha512_crypt; import getpass; print(sha512_crypt.using(rounds=5000).hash(getpass.getpass()))"

- name: "Add {{ ansible_user }} to wheel group"
  user:
    name: "{{ ansible_user }}"
    groups: wheel
    append: yes
    shell: /bin/bash
#  with_items: "{{ sudoers }}"
  tags:
    - user

- name: Create '~/.ssh' if it does not exist
  file:
    #path: "~/.ssh"
    path: "/home/{{ ansible_user }}/.ssh"
    state: directory
    mode: '0700'
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  #become: yes
  #become_user: "{{ ansible_user }}"

- name: "Place authorized keys - {{ ansible_user }} /.ssh/authorized_keys"
  template:
    src: ssh_authorized_keys.j2
    #dest: "~/.ssh/authorized_keys"
    dest: "/home/{{ ansible_user }}/.ssh/authorized_keys"
    mode: '0600'
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  tags:
    - user
  #become: yes
  #become_user: "{{ ansible_user }}"

- name: "Check for {{ ansible_user }} id_rsa keys"
  stat:
    path: "/home/{{ ansible_user }}/.ssh/id_rsa"
  register: ssh_keys
  tags:
    - user
    - ssh
  #become: yes
  #become_user: "{{ ansible_user }}"

- name: "Generate keypair for user "
  openssh_keypair:
    path: "/home/{{ ansible_user }}/.ssh/id_rsa"
    size: 2048
    type: rsa
  when: ssh_keys.stat.exists == false
  tags:
    - user
  #become: yes
  #become_user: "{{ ansible_user }}"

- name: SSH key settings, chmod & chown ~/.ssh/id_rsa
  file:
    path: "{{ item.path }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "{{ item.mode }}"
  with_items:
    - { path: '/home/{{ ansible_user }}/.ssh/id_rsa',     mode: '0600' }
    - { path: '/home/{{ ansible_user }}/.ssh/id_rsa.pub', mode: '0644' }
  tags:
    - user
  #become: yes
  #become_user: "{{ ansible_user }}"

########
# Add user: mattcozzolino
- name: "Add the user mattcozzolino"
  user:
    name: "mattcozzolino"
    comment: ""
    state: present
    uid: 1069
    groups: wheel,sudo
    password: "$6$GqKbi/j08TECVS4T$6uS9FvJ/486JeZxaBUDL0VXTL.hmaxwAdnMifZtc2DZAsCmVrHK6vFVC2FGGSfmrBpN0W8veUf1eEeSAWgXRK0"
  notify:
    - Reboot host
# Generate passwords like this
# https://docs.ansible.com/ansible/latest/reference_appendices/faq.html#how-do-i-generate-encrypted-passwords-for-the-user-module
# python -c "from passlib.hash import sha512_crypt; import getpass; print(sha512_crypt.using(rounds=5000).hash(getpass.getpass()))"

- name: "Add mattcozzolino to wheel group"
  user:
    name: "mattcozzolino"
    groups: wheel
    append: yes
    shell: /bin/bash
#  with_items: "{{ sudoers }}"
  tags:
    - user

- name: Create '~/.ssh' if it does not exist
  file:
    path: "/home/mattcozzolino/.ssh"
    state: directory
    mode: '0700'
    owner: "mattcozzolino"
    group: "mattcozzolino"
  #become: yes
  #become_user: "mattcozzolino"
  #become_method: su

- name: "Place authorized keys - mattcozzolino /.ssh/authorized_keys"
  template:
    src: ssh_authorized_keys.j2
    dest: "/home/mattcozzolino/.ssh/authorized_keys"
#    dest: "/home/{{ ansible_user }}/.ssh/authorized_keys"
    mode: '0600'
    owner: "mattcozzolino"
    group: "mattcozzolino"
  tags:
    - user
  #become: yes
  #become_user: "mattcozzolino"

- name: "Check for mattcozzolino id_rsa keys"
  stat:
    path: "/home/mattcozzolino/.ssh/id_rsa"
  register: ssh_keys
  tags:
    - user
    - ssh
  #become: yes
  #become_user: "mattcozzolino"

- name: "Generate keypair for user "
  openssh_keypair:
    path: "/home/mattcozzolino/.ssh/id_rsa"
    size: 2048
    type: rsa
  when: ssh_keys.stat.exists == false
  tags:
    - user
  #become: yes
  #become_user: "mattcozzolino"

- name: SSH key settings, chmod & chown ~/.ssh/id_rsa
  file:
    path: "{{ item.path }}"
    owner: "mattcozzolino"
    group: "mattcozzolino"
    mode: "{{ item.mode }}"
  with_items:
    - { path: '/home/mattcozzolino/.ssh/id_rsa',     mode: '0600' }
    - { path: '/home/mattcozzolino/.ssh/id_rsa.pub', mode: '0644' }
  tags:
    - user
  #become: yes
  #become_user: "mattcozzolino"
